{
  "name": "luau-type",
  "scopeName": "source.luau-type",
  "fileTypes": [
    "luau-type"
  ],
  "patterns": [
    {
      "include": "#type_literal"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.block.luau",
          "begin": "--\\[(=*)\\[",
          "end": "\\]\\1\\]",
          "patterns": [
            {
              "name": "keyword.operator.other.luau",
              "begin": "(```luau?)\\s+",
              "end": "(```)",
              "beginCaptures": {
                "1": {
                  "name": "comment.luau"
                }
              },
              "endCaptures": {
                "1": {
                  "name": "comment.luau"
                }
              },
              "patterns": [
                {
                  "include": "source.luau"
                }
              ]
            },
            {
              "include": "#doc_comment_tags"
            }
          ]
        },
        {
          "name": "comment.line.double-dash.documentation.luau",
          "begin": "---",
          "end": "\\n",
          "patterns": [
            {
              "include": "#doc_comment_tags"
            }
          ]
        },
        {
          "name": "comment.line.double-dash.luau",
          "begin": "--",
          "end": "\\n"
        }
      ]
    },
    "doc_comment_tags": {
      "patterns": [
        {
          "name": "storage.type.class.luadoc.luau",
          "match": "@\\w+"
        },
        {
          "match": "((?<=[\\s*!\\/])[\\\\@]param)(?:\\s)+(\\b\\w+\\b)",
          "captures": {
            "1": {
              "name": "storage.type.class.luadoc.luau"
            },
            "2": {
              "name": "variable.parameter.luau"
            }
          }
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.luau",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "include": "#string_escape"
            }
          ]
        },
        {
          "name": "string.quoted.single.luau",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "include": "#string_escape"
            }
          ]
        },
        {
          "name": "string.other.multiline.luau",
          "begin": "\\[(=*)\\[",
          "end": "\\]\\1\\]"
        },
        {
          "name": "string.interpolated.luau",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "include": "#interpolated_string_expression"
            },
            {
              "include": "#string_escape"
            }
          ]
        }
      ]
    },
    "string_escape": {
      "patterns": [
        {
          "name": "constant.character.escape.luau",
          "match": "\\\\[abfnrtvz'\"`{\\\\]"
        },
        {
          "name": "constant.character.escape.luau",
          "match": "\\\\\\d{1,3}"
        },
        {
          "name": "constant.character.escape.luau",
          "match": "\\\\x[0-9a-fA-F]{2}"
        },
        {
          "name": "constant.character.escape.luau",
          "match": "\\\\u\\{[0-9a-fA-F]*\\}"
        },
        {
          "name": "constant.character.escape.luau",
          "match": "\\\\$"
        }
      ]
    },
    "interpolated_string_expression": {
      "name": "meta.template.expression.luau",
      "contentName": "meta.embedded.line.luau",
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.interpolated-string-expression.begin.luau"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.interpolated-string-expression.end.luau"
        }
      },
      "patterns": [
        {
          "include": "source.luau"
        }
      ]
    },
    "type_literal": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#string"
        },
        {
          "match": "\\?|\\&|\\|",
          "name": "keyword.operator.type.luau"
        },
        {
          "match": "->",
          "name": "keyword.operator.type.function.luau"
        },
        {
          "match": "\\b(false)\\b",
          "name": "constant.language.boolean.false.luau"
        },
        {
          "match": "\\b(true)\\b",
          "name": "constant.language.boolean.true.luau"
        },
        {
          "name": "support.type.primitive.luau",
          "match": "\\b(nil|string|number|boolean|thread|userdata|symbol|any)\\b"
        },
        {
          "begin": "\\b(typeof)\\b(\\()",
          "beginCaptures": {
            "1": {
              "name": "support.function.luau"
            },
            "2": {
              "name": "punctuation.arguments.begin.typeof.luau"
            }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "punctuation.arguments.end.typeof.luau"
            }
          },
          "patterns": [
            {
              "include": "source.luau"
            }
          ]
        },
        {
          "begin": "(<)",
          "end": "(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.typeparameters.begin.luau"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.typeparameters.end.luau"
            }
          },
          "patterns": [
            {
              "match": "=",
              "name": "keyword.operator.assignment.luau"
            },
            {
              "include": "#type_literal"
            }
          ]
        },
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "name": "entity.name.type.luau"
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "begin": "\\[",
              "end": "\\]",
              "patterns": [
                {
                  "include": "#type_literal"
                }
              ]
            },
            {
              "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(:)",
              "captures": {
                "1": {
                  "name": "variable.property.luau"
                },
                "2": {
                  "name": "keyword.operator.type.luau"
                }
              }
            },
            {
              "include": "#type_literal"
            },
            {
              "match": "[,;]",
              "name": "punctuation.separator.fields.type.luau"
            }
          ]
        },
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "name": "variable.parameter.luau",
              "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(:)",
              "captures": {
                "1": {
                  "name": "variable.parameter.luau"
                },
                "2": {
                  "name": "keyword.operator.type.luau"
                }
              }
            },
            {
              "include": "#type_literal"
            }
          ]
        }
      ]
    }
  }
}